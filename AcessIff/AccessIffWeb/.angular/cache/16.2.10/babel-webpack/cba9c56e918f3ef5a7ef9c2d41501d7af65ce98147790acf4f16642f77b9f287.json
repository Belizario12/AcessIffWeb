{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/controllers/UnitOfController/unit-of-controller.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"E-mail inv\\u00E1lido!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Senha inv\\u00E1lida!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, controller) {\n    this.fb = fb;\n    this.controller = controller;\n    this.loginObj = this.controller.loginController.returnLoginEmpty();\n    this.formLogin = this.fb.group({\n      user: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    this.loginObj.email = this.formLogin.get('user')?.value;\n    this.loginObj.senha = this.formLogin.get('password')?.value;\n    this.controller.loginController.Login(this.loginObj).subscribe({\n      next: result => {\n        console.log(result);\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UnitOfControllerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"login\"], [1, \"loginContainer\"], [1, \"imgLogin\"], [\"src\", \"../../../assets/logoIff.jpeg\", \"alt\", \"logoIff\", 1, \"logoIff\"], [1, \"loginInputs\"], [1, \"title\"], [1, \"formLogin\", 3, \"formGroup\"], [1, \"inputLogin\"], [\"matInput\", \"\", \"formControlName\", \"user\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\"], [1, \"recoveryPassword\"], [\"href\", \"#\"], [1, \"btnLogin\"], [\"mat-raised-button\", \"\", 1, \"buttonConfirm\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"p\", 5);\n        i0.ɵɵtext(6, \"Entrar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 6)(8, \"mat-form-field\", 7)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"E-mail ou matr\\u00EDcula\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 7)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵtemplate(17, LoginComponent_mat_error_17_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"a\", 12);\n        i0.ɵɵtext(20, \"Esqueci minha senha\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_22_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(23, \"Entrar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.formLogin);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formLogin.controls[\"user\"].hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formLogin.controls[\"password\"].hasError(\"required\"));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.MatFormField, i3.MatLabel, i3.MatError, i4.MatInput, i5.NgIf],\n    styles: [\"@charset \\\"UTF-8\\\";\\n\\n\\n\\n\\n\\n\\n\\n[_ngcontent-%COMP%]:root {\\n  --animate-duration: 1s;\\n  --animate-delay: 1s;\\n  --animate-repeat: 1;\\n}\\n.animate__animated[_ngcontent-%COMP%] {\\n  animation-duration: 1s;\\n  animation-duration: var(--animate-duration);\\n  animation-fill-mode: both;\\n}\\n.animate__animated.animate__infinite[_ngcontent-%COMP%] {\\n  animation-iteration-count: infinite;\\n}\\n.animate__animated.animate__repeat-1[_ngcontent-%COMP%] {\\n  animation-iteration-count: 1;\\n  animation-iteration-count: var(--animate-repeat);\\n}\\n.animate__animated.animate__repeat-2[_ngcontent-%COMP%] {\\n  animation-iteration-count: calc(1 * 2);\\n  animation-iteration-count: calc(var(--animate-repeat) * 2);\\n}\\n.animate__animated.animate__repeat-3[_ngcontent-%COMP%] {\\n  animation-iteration-count: calc(1 * 3);\\n  animation-iteration-count: calc(var(--animate-repeat) * 3);\\n}\\n.animate__animated.animate__delay-1s[_ngcontent-%COMP%] {\\n  animation-delay: 1s;\\n  animation-delay: var(--animate-delay);\\n}\\n.animate__animated.animate__delay-2s[_ngcontent-%COMP%] {\\n  animation-delay: calc(1s * 2);\\n  animation-delay: calc(var(--animate-delay) * 2);\\n}\\n.animate__animated.animate__delay-3s[_ngcontent-%COMP%] {\\n  animation-delay: calc(1s * 3);\\n  animation-delay: calc(var(--animate-delay) * 3);\\n}\\n.animate__animated.animate__delay-4s[_ngcontent-%COMP%] {\\n  animation-delay: calc(1s * 4);\\n  animation-delay: calc(var(--animate-delay) * 4);\\n}\\n.animate__animated.animate__delay-5s[_ngcontent-%COMP%] {\\n  animation-delay: calc(1s * 5);\\n  animation-delay: calc(var(--animate-delay) * 5);\\n}\\n.animate__animated.animate__faster[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s / 2);\\n  animation-duration: calc(var(--animate-duration) / 2);\\n}\\n.animate__animated.animate__fast[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 0.8);\\n  animation-duration: calc(var(--animate-duration) * 0.8);\\n}\\n.animate__animated.animate__slow[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 2);\\n  animation-duration: calc(var(--animate-duration) * 2);\\n}\\n.animate__animated.animate__slower[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 3);\\n  animation-duration: calc(var(--animate-duration) * 3);\\n}\\n@media print, (prefers-reduced-motion: reduce) {\\n  .animate__animated[_ngcontent-%COMP%] {\\n    animation-duration: 1ms !important;\\n    transition-duration: 1ms !important;\\n    animation-iteration-count: 1 !important;\\n  }\\n\\n  .animate__animated[class*='Out'][_ngcontent-%COMP%] {\\n    opacity: 0;\\n  }\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_bounce {\\n  from,\\n  20%,\\n  53%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  40%,\\n  43% {\\n    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\\n    transform: translate3d(0, -30px, 0) scaleY(1.1);\\n  }\\n\\n  70% {\\n    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\\n    transform: translate3d(0, -15px, 0) scaleY(1.05);\\n  }\\n\\n  80% {\\n    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n    transform: translate3d(0, 0, 0) scaleY(0.95);\\n  }\\n\\n  90% {\\n    transform: translate3d(0, -4px, 0) scaleY(1.02);\\n  }\\n}\\n.animate__bounce[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounce;\\n  transform-origin: center bottom;\\n}\\n@keyframes _ngcontent-%COMP%_flash {\\n  from,\\n  50%,\\n  to {\\n    opacity: 1;\\n  }\\n\\n  25%,\\n  75% {\\n    opacity: 0;\\n  }\\n}\\n.animate__flash[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_flash;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  from {\\n    transform: scale3d(1, 1, 1);\\n  }\\n\\n  50% {\\n    transform: scale3d(1.05, 1.05, 1.05);\\n  }\\n\\n  to {\\n    transform: scale3d(1, 1, 1);\\n  }\\n}\\n.animate__pulse[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_pulse;\\n  animation-timing-function: ease-in-out;\\n}\\n@keyframes _ngcontent-%COMP%_rubberBand {\\n  from {\\n    transform: scale3d(1, 1, 1);\\n  }\\n\\n  30% {\\n    transform: scale3d(1.25, 0.75, 1);\\n  }\\n\\n  40% {\\n    transform: scale3d(0.75, 1.25, 1);\\n  }\\n\\n  50% {\\n    transform: scale3d(1.15, 0.85, 1);\\n  }\\n\\n  65% {\\n    transform: scale3d(0.95, 1.05, 1);\\n  }\\n\\n  75% {\\n    transform: scale3d(1.05, 0.95, 1);\\n  }\\n\\n  to {\\n    transform: scale3d(1, 1, 1);\\n  }\\n}\\n.animate__rubberBand[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rubberBand;\\n}\\n@keyframes _ngcontent-%COMP%_shakeX {\\n  from,\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  10%,\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    transform: translate3d(-10px, 0, 0);\\n  }\\n\\n  20%,\\n  40%,\\n  60%,\\n  80% {\\n    transform: translate3d(10px, 0, 0);\\n  }\\n}\\n.animate__shakeX[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_shakeX;\\n}\\n@keyframes _ngcontent-%COMP%_shakeY {\\n  from,\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  10%,\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    transform: translate3d(0, -10px, 0);\\n  }\\n\\n  20%,\\n  40%,\\n  60%,\\n  80% {\\n    transform: translate3d(0, 10px, 0);\\n  }\\n}\\n.animate__shakeY[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_shakeY;\\n}\\n@keyframes _ngcontent-%COMP%_headShake {\\n  0% {\\n    transform: translateX(0);\\n  }\\n\\n  6.5% {\\n    transform: translateX(-6px) rotateY(-9deg);\\n  }\\n\\n  18.5% {\\n    transform: translateX(5px) rotateY(7deg);\\n  }\\n\\n  31.5% {\\n    transform: translateX(-3px) rotateY(-5deg);\\n  }\\n\\n  43.5% {\\n    transform: translateX(2px) rotateY(3deg);\\n  }\\n\\n  50% {\\n    transform: translateX(0);\\n  }\\n}\\n.animate__headShake[_ngcontent-%COMP%] {\\n  animation-timing-function: ease-in-out;\\n  animation-name: _ngcontent-%COMP%_headShake;\\n}\\n@keyframes _ngcontent-%COMP%_swing {\\n  20% {\\n    transform: rotate3d(0, 0, 1, 15deg);\\n  }\\n\\n  40% {\\n    transform: rotate3d(0, 0, 1, -10deg);\\n  }\\n\\n  60% {\\n    transform: rotate3d(0, 0, 1, 5deg);\\n  }\\n\\n  80% {\\n    transform: rotate3d(0, 0, 1, -5deg);\\n  }\\n\\n  to {\\n    transform: rotate3d(0, 0, 1, 0deg);\\n  }\\n}\\n.animate__swing[_ngcontent-%COMP%] {\\n  transform-origin: top center;\\n  animation-name: _ngcontent-%COMP%_swing;\\n}\\n@keyframes _ngcontent-%COMP%_tada {\\n  from {\\n    transform: scale3d(1, 1, 1);\\n  }\\n\\n  10%,\\n  20% {\\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\\n  }\\n\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\\n  }\\n\\n  40%,\\n  60%,\\n  80% {\\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\\n  }\\n\\n  to {\\n    transform: scale3d(1, 1, 1);\\n  }\\n}\\n.animate__tada[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_tada;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_wobble {\\n  from {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  15% {\\n    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\\n  }\\n\\n  30% {\\n    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\\n  }\\n\\n  45% {\\n    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\\n  }\\n\\n  60% {\\n    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\\n  }\\n\\n  75% {\\n    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__wobble[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_wobble;\\n}\\n@keyframes _ngcontent-%COMP%_jello {\\n  from,\\n  11.1%,\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  22.2% {\\n    transform: skewX(-12.5deg) skewY(-12.5deg);\\n  }\\n\\n  33.3% {\\n    transform: skewX(6.25deg) skewY(6.25deg);\\n  }\\n\\n  44.4% {\\n    transform: skewX(-3.125deg) skewY(-3.125deg);\\n  }\\n\\n  55.5% {\\n    transform: skewX(1.5625deg) skewY(1.5625deg);\\n  }\\n\\n  66.6% {\\n    transform: skewX(-0.78125deg) skewY(-0.78125deg);\\n  }\\n\\n  77.7% {\\n    transform: skewX(0.390625deg) skewY(0.390625deg);\\n  }\\n\\n  88.8% {\\n    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);\\n  }\\n}\\n.animate__jello[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_jello;\\n  transform-origin: center;\\n}\\n@keyframes _ngcontent-%COMP%_heartBeat {\\n  0% {\\n    transform: scale(1);\\n  }\\n\\n  14% {\\n    transform: scale(1.3);\\n  }\\n\\n  28% {\\n    transform: scale(1);\\n  }\\n\\n  42% {\\n    transform: scale(1.3);\\n  }\\n\\n  70% {\\n    transform: scale(1);\\n  }\\n}\\n.animate__heartBeat[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_heartBeat;\\n  animation-duration: calc(1s * 1.3);\\n  animation-duration: calc(var(--animate-duration) * 1.3);\\n  animation-timing-function: ease-in-out;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_backInDown {\\n  0% {\\n    transform: translateY(-1200px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  80% {\\n    transform: translateY(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n.animate__backInDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backInDown;\\n}\\n@keyframes _ngcontent-%COMP%_backInLeft {\\n  0% {\\n    transform: translateX(-2000px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  80% {\\n    transform: translateX(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n.animate__backInLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backInLeft;\\n}\\n@keyframes _ngcontent-%COMP%_backInRight {\\n  0% {\\n    transform: translateX(2000px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  80% {\\n    transform: translateX(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n.animate__backInRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backInRight;\\n}\\n@keyframes _ngcontent-%COMP%_backInUp {\\n  0% {\\n    transform: translateY(1200px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  80% {\\n    transform: translateY(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n.animate__backInUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backInUp;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_backOutDown {\\n  0% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n\\n  20% {\\n    transform: translateY(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: translateY(700px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n}\\n.animate__backOutDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backOutDown;\\n}\\n@keyframes _ngcontent-%COMP%_backOutLeft {\\n  0% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n\\n  20% {\\n    transform: translateX(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: translateX(-2000px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n}\\n.animate__backOutLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backOutLeft;\\n}\\n@keyframes _ngcontent-%COMP%_backOutRight {\\n  0% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n\\n  20% {\\n    transform: translateX(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: translateX(2000px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n}\\n.animate__backOutRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backOutRight;\\n}\\n@keyframes _ngcontent-%COMP%_backOutUp {\\n  0% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n\\n  20% {\\n    transform: translateY(0px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n\\n  100% {\\n    transform: translateY(-700px) scale(0.7);\\n    opacity: 0.7;\\n  }\\n}\\n.animate__backOutUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_backOutUp;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_bounceIn {\\n  from,\\n  20%,\\n  40%,\\n  60%,\\n  80%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  0% {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n\\n  20% {\\n    transform: scale3d(1.1, 1.1, 1.1);\\n  }\\n\\n  40% {\\n    transform: scale3d(0.9, 0.9, 0.9);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: scale3d(1.03, 1.03, 1.03);\\n  }\\n\\n  80% {\\n    transform: scale3d(0.97, 0.97, 0.97);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: scale3d(1, 1, 1);\\n  }\\n}\\n.animate__bounceIn[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 0.75);\\n  animation-duration: calc(var(--animate-duration) * 0.75);\\n  animation-name: _ngcontent-%COMP%_bounceIn;\\n}\\n@keyframes _ngcontent-%COMP%_bounceInDown {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(0, -3000px, 0) scaleY(3);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, 25px, 0) scaleY(0.9);\\n  }\\n\\n  75% {\\n    transform: translate3d(0, -10px, 0) scaleY(0.95);\\n  }\\n\\n  90% {\\n    transform: translate3d(0, 5px, 0) scaleY(0.985);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__bounceInDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceInDown;\\n}\\n@keyframes _ngcontent-%COMP%_bounceInLeft {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  0% {\\n    opacity: 0;\\n    transform: translate3d(-3000px, 0, 0) scaleX(3);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(25px, 0, 0) scaleX(1);\\n  }\\n\\n  75% {\\n    transform: translate3d(-10px, 0, 0) scaleX(0.98);\\n  }\\n\\n  90% {\\n    transform: translate3d(5px, 0, 0) scaleX(0.995);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__bounceInLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceInLeft;\\n}\\n@keyframes _ngcontent-%COMP%_bounceInRight {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  from {\\n    opacity: 0;\\n    transform: translate3d(3000px, 0, 0) scaleX(3);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(-25px, 0, 0) scaleX(1);\\n  }\\n\\n  75% {\\n    transform: translate3d(10px, 0, 0) scaleX(0.98);\\n  }\\n\\n  90% {\\n    transform: translate3d(-5px, 0, 0) scaleX(0.995);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__bounceInRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceInRight;\\n}\\n@keyframes _ngcontent-%COMP%_bounceInUp {\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, 3000px, 0) scaleY(5);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\\n  }\\n\\n  75% {\\n    transform: translate3d(0, 10px, 0) scaleY(0.95);\\n  }\\n\\n  90% {\\n    transform: translate3d(0, -5px, 0) scaleY(0.985);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__bounceInUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceInUp;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_bounceOut {\\n  20% {\\n    transform: scale3d(0.9, 0.9, 0.9);\\n  }\\n\\n  50%,\\n  55% {\\n    opacity: 1;\\n    transform: scale3d(1.1, 1.1, 1.1);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n}\\n.animate__bounceOut[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 0.75);\\n  animation-duration: calc(var(--animate-duration) * 0.75);\\n  animation-name: _ngcontent-%COMP%_bounceOut;\\n}\\n@keyframes _ngcontent-%COMP%_bounceOutDown {\\n  20% {\\n    transform: translate3d(0, 10px, 0) scaleY(0.985);\\n  }\\n\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, 2000px, 0) scaleY(3);\\n  }\\n}\\n.animate__bounceOutDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceOutDown;\\n}\\n@keyframes _ngcontent-%COMP%_bounceOutLeft {\\n  20% {\\n    opacity: 1;\\n    transform: translate3d(20px, 0, 0) scaleX(0.9);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-2000px, 0, 0) scaleX(2);\\n  }\\n}\\n.animate__bounceOutLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceOutLeft;\\n}\\n@keyframes _ngcontent-%COMP%_bounceOutRight {\\n  20% {\\n    opacity: 1;\\n    transform: translate3d(-20px, 0, 0) scaleX(0.9);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(2000px, 0, 0) scaleX(2);\\n  }\\n}\\n.animate__bounceOutRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceOutRight;\\n}\\n@keyframes _ngcontent-%COMP%_bounceOutUp {\\n  20% {\\n    transform: translate3d(0, -10px, 0) scaleY(0.985);\\n  }\\n\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, 20px, 0) scaleY(0.9);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, -2000px, 0) scaleY(3);\\n  }\\n}\\n.animate__bounceOutUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_bounceOutUp;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n\\n  to {\\n    opacity: 1;\\n  }\\n}\\n.animate__fadeIn[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeIn;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInDown {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, -100%, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInDown;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInDownBig {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, -2000px, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInDownBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInDownBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInLeft {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInLeft;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInLeftBig {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(-2000px, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInLeftBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInLeftBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInRight {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(100%, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInRight;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInRightBig {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(2000px, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInRightBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInRightBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, 100%, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInUp;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInUpBig {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, 2000px, 0);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInUpBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInUpBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInTopLeft {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(-100%, -100%, 0);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInTopLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInTopLeft;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInTopRight {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(100%, -100%, 0);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInTopRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInTopRight;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInBottomLeft {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(-100%, 100%, 0);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInBottomLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInBottomLeft;\\n}\\n@keyframes _ngcontent-%COMP%_fadeInBottomRight {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(100%, 100%, 0);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__fadeInBottomRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeInBottomRight;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n  }\\n}\\n.animate__fadeOut[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOut;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutDown {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, 100%, 0);\\n  }\\n}\\n.animate__fadeOutDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutDown;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutDownBig {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, 2000px, 0);\\n  }\\n}\\n.animate__fadeOutDownBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutDownBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutLeft {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n}\\n.animate__fadeOutLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutLeft;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutLeftBig {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-2000px, 0, 0);\\n  }\\n}\\n.animate__fadeOutLeftBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutLeftBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutRight {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(100%, 0, 0);\\n  }\\n}\\n.animate__fadeOutRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutRight;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutRightBig {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(2000px, 0, 0);\\n  }\\n}\\n.animate__fadeOutRightBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutRightBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutUp {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, -100%, 0);\\n  }\\n}\\n.animate__fadeOutUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutUp;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutUpBig {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, -2000px, 0);\\n  }\\n}\\n.animate__fadeOutUpBig[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutUpBig;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutTopLeft {\\n  from {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-100%, -100%, 0);\\n  }\\n}\\n.animate__fadeOutTopLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutTopLeft;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutTopRight {\\n  from {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(100%, -100%, 0);\\n  }\\n}\\n.animate__fadeOutTopRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutTopRight;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutBottomRight {\\n  from {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(100%, 100%, 0);\\n  }\\n}\\n.animate__fadeOutBottomRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutBottomRight;\\n}\\n@keyframes _ngcontent-%COMP%_fadeOutBottomLeft {\\n  from {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n  to {\\n    opacity: 0;\\n    transform: translate3d(-100%, 100%, 0);\\n  }\\n}\\n.animate__fadeOutBottomLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_fadeOutBottomLeft;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_flip {\\n  from {\\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);\\n    animation-timing-function: ease-out;\\n  }\\n\\n  40% {\\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\\n      rotate3d(0, 1, 0, -190deg);\\n    animation-timing-function: ease-out;\\n  }\\n\\n  50% {\\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\\n      rotate3d(0, 1, 0, -170deg);\\n    animation-timing-function: ease-in;\\n  }\\n\\n  80% {\\n    transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)\\n      rotate3d(0, 1, 0, 0deg);\\n    animation-timing-function: ease-in;\\n  }\\n\\n  to {\\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);\\n    animation-timing-function: ease-in;\\n  }\\n}\\n.animate__animated.animate__flip[_ngcontent-%COMP%] {\\n  backface-visibility: visible;\\n  animation-name: _ngcontent-%COMP%_flip;\\n}\\n@keyframes _ngcontent-%COMP%_flipInX {\\n  from {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\\n    animation-timing-function: ease-in;\\n    opacity: 0;\\n  }\\n\\n  40% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\\n    animation-timing-function: ease-in;\\n  }\\n\\n  60% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\\n    opacity: 1;\\n  }\\n\\n  80% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\\n  }\\n\\n  to {\\n    transform: perspective(400px);\\n  }\\n}\\n.animate__flipInX[_ngcontent-%COMP%] {\\n  backface-visibility: visible !important;\\n  animation-name: _ngcontent-%COMP%_flipInX;\\n}\\n@keyframes _ngcontent-%COMP%_flipInY {\\n  from {\\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\\n    animation-timing-function: ease-in;\\n    opacity: 0;\\n  }\\n\\n  40% {\\n    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\\n    animation-timing-function: ease-in;\\n  }\\n\\n  60% {\\n    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\\n    opacity: 1;\\n  }\\n\\n  80% {\\n    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\\n  }\\n\\n  to {\\n    transform: perspective(400px);\\n  }\\n}\\n.animate__flipInY[_ngcontent-%COMP%] {\\n  backface-visibility: visible !important;\\n  animation-name: _ngcontent-%COMP%_flipInY;\\n}\\n@keyframes _ngcontent-%COMP%_flipOutX {\\n  from {\\n    transform: perspective(400px);\\n  }\\n\\n  30% {\\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__flipOutX[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 0.75);\\n  animation-duration: calc(var(--animate-duration) * 0.75);\\n  animation-name: _ngcontent-%COMP%_flipOutX;\\n  backface-visibility: visible !important;\\n}\\n@keyframes _ngcontent-%COMP%_flipOutY {\\n  from {\\n    transform: perspective(400px);\\n  }\\n\\n  30% {\\n    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__flipOutY[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 0.75);\\n  animation-duration: calc(var(--animate-duration) * 0.75);\\n  backface-visibility: visible !important;\\n  animation-name: _ngcontent-%COMP%_flipOutY;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_lightSpeedInRight {\\n  from {\\n    transform: translate3d(100%, 0, 0) skewX(-30deg);\\n    opacity: 0;\\n  }\\n\\n  60% {\\n    transform: skewX(20deg);\\n    opacity: 1;\\n  }\\n\\n  80% {\\n    transform: skewX(-5deg);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__lightSpeedInRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_lightSpeedInRight;\\n  animation-timing-function: ease-out;\\n}\\n@keyframes _ngcontent-%COMP%_lightSpeedInLeft {\\n  from {\\n    transform: translate3d(-100%, 0, 0) skewX(30deg);\\n    opacity: 0;\\n  }\\n\\n  60% {\\n    transform: skewX(-20deg);\\n    opacity: 1;\\n  }\\n\\n  80% {\\n    transform: skewX(5deg);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__lightSpeedInLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_lightSpeedInLeft;\\n  animation-timing-function: ease-out;\\n}\\n@keyframes _ngcontent-%COMP%_lightSpeedOutRight {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: translate3d(100%, 0, 0) skewX(30deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__lightSpeedOutRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_lightSpeedOutRight;\\n  animation-timing-function: ease-in;\\n}\\n@keyframes _ngcontent-%COMP%_lightSpeedOutLeft {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: translate3d(-100%, 0, 0) skewX(-30deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__lightSpeedOutLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_lightSpeedOutLeft;\\n  animation-timing-function: ease-in;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_rotateIn {\\n  from {\\n    transform: rotate3d(0, 0, 1, -200deg);\\n    opacity: 0;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  }\\n}\\n.animate__rotateIn[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateIn;\\n  transform-origin: center;\\n}\\n@keyframes _ngcontent-%COMP%_rotateInDownLeft {\\n  from {\\n    transform: rotate3d(0, 0, 1, -45deg);\\n    opacity: 0;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  }\\n}\\n.animate__rotateInDownLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateInDownLeft;\\n  transform-origin: left bottom;\\n}\\n@keyframes _ngcontent-%COMP%_rotateInDownRight {\\n  from {\\n    transform: rotate3d(0, 0, 1, 45deg);\\n    opacity: 0;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  }\\n}\\n.animate__rotateInDownRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateInDownRight;\\n  transform-origin: right bottom;\\n}\\n@keyframes _ngcontent-%COMP%_rotateInUpLeft {\\n  from {\\n    transform: rotate3d(0, 0, 1, 45deg);\\n    opacity: 0;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  }\\n}\\n.animate__rotateInUpLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateInUpLeft;\\n  transform-origin: left bottom;\\n}\\n@keyframes _ngcontent-%COMP%_rotateInUpRight {\\n  from {\\n    transform: rotate3d(0, 0, 1, -90deg);\\n    opacity: 0;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  }\\n}\\n.animate__rotateInUpRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateInUpRight;\\n  transform-origin: right bottom;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_rotateOut {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: rotate3d(0, 0, 1, 200deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__rotateOut[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateOut;\\n  transform-origin: center;\\n}\\n@keyframes _ngcontent-%COMP%_rotateOutDownLeft {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: rotate3d(0, 0, 1, 45deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__rotateOutDownLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateOutDownLeft;\\n  transform-origin: left bottom;\\n}\\n@keyframes _ngcontent-%COMP%_rotateOutDownRight {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: rotate3d(0, 0, 1, -45deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__rotateOutDownRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateOutDownRight;\\n  transform-origin: right bottom;\\n}\\n@keyframes _ngcontent-%COMP%_rotateOutUpLeft {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: rotate3d(0, 0, 1, -45deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__rotateOutUpLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateOutUpLeft;\\n  transform-origin: left bottom;\\n}\\n@keyframes _ngcontent-%COMP%_rotateOutUpRight {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: rotate3d(0, 0, 1, 90deg);\\n    opacity: 0;\\n  }\\n}\\n.animate__rotateOutUpRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rotateOutUpRight;\\n  transform-origin: right bottom;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_hinge {\\n  0% {\\n    animation-timing-function: ease-in-out;\\n  }\\n\\n  20%,\\n  60% {\\n    transform: rotate3d(0, 0, 1, 80deg);\\n    animation-timing-function: ease-in-out;\\n  }\\n\\n  40%,\\n  80% {\\n    transform: rotate3d(0, 0, 1, 60deg);\\n    animation-timing-function: ease-in-out;\\n    opacity: 1;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 700px, 0);\\n    opacity: 0;\\n  }\\n}\\n.animate__hinge[_ngcontent-%COMP%] {\\n  animation-duration: calc(1s * 2);\\n  animation-duration: calc(var(--animate-duration) * 2);\\n  animation-name: _ngcontent-%COMP%_hinge;\\n  transform-origin: top left;\\n}\\n@keyframes _ngcontent-%COMP%_jackInTheBox {\\n  from {\\n    opacity: 0;\\n    transform: scale(0.1) rotate(30deg);\\n    transform-origin: center bottom;\\n  }\\n\\n  50% {\\n    transform: rotate(-10deg);\\n  }\\n\\n  70% {\\n    transform: rotate(3deg);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: scale(1);\\n  }\\n}\\n.animate__jackInTheBox[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_jackInTheBox;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_rollIn {\\n  from {\\n    opacity: 0;\\n    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\\n  }\\n\\n  to {\\n    opacity: 1;\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__rollIn[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rollIn;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_rollOut {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\\n  }\\n}\\n.animate__rollOut[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_rollOut;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_zoomIn {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n\\n  50% {\\n    opacity: 1;\\n  }\\n}\\n.animate__zoomIn[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomIn;\\n}\\n@keyframes _ngcontent-%COMP%_zoomInDown {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);\\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);\\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\\n  }\\n}\\n.animate__zoomInDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomInDown;\\n}\\n@keyframes _ngcontent-%COMP%_zoomInLeft {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);\\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);\\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\\n  }\\n}\\n.animate__zoomInLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomInLeft;\\n}\\n@keyframes _ngcontent-%COMP%_zoomInRight {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);\\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);\\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\\n  }\\n}\\n.animate__zoomInRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomInRight;\\n}\\n@keyframes _ngcontent-%COMP%_zoomInUp {\\n  from {\\n    opacity: 0;\\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);\\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);\\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\\n  }\\n}\\n.animate__zoomInUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomInUp;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_zoomOut {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  50% {\\n    opacity: 0;\\n    transform: scale3d(0.3, 0.3, 0.3);\\n  }\\n\\n  to {\\n    opacity: 0;\\n  }\\n}\\n.animate__zoomOut[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomOut;\\n}\\n@keyframes _ngcontent-%COMP%_zoomOutDown {\\n  40% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);\\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);\\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\\n  }\\n}\\n.animate__zoomOutDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomOutDown;\\n  transform-origin: center bottom;\\n}\\n@keyframes _ngcontent-%COMP%_zoomOutLeft {\\n  40% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: scale(0.1) translate3d(-2000px, 0, 0);\\n  }\\n}\\n.animate__zoomOutLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomOutLeft;\\n  transform-origin: left center;\\n}\\n@keyframes _ngcontent-%COMP%_zoomOutRight {\\n  40% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: scale(0.1) translate3d(2000px, 0, 0);\\n  }\\n}\\n.animate__zoomOutRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomOutRight;\\n  transform-origin: right center;\\n}\\n@keyframes _ngcontent-%COMP%_zoomOutUp {\\n  40% {\\n    opacity: 1;\\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);\\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);\\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\\n  }\\n}\\n.animate__zoomOutUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_zoomOutUp;\\n  transform-origin: center bottom;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_slideInDown {\\n  from {\\n    transform: translate3d(0, -100%, 0);\\n    visibility: visible;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__slideInDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideInDown;\\n}\\n@keyframes _ngcontent-%COMP%_slideInLeft {\\n  from {\\n    transform: translate3d(-100%, 0, 0);\\n    visibility: visible;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__slideInLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideInLeft;\\n}\\n@keyframes _ngcontent-%COMP%_slideInRight {\\n  from {\\n    transform: translate3d(100%, 0, 0);\\n    visibility: visible;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__slideInRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideInRight;\\n}\\n@keyframes _ngcontent-%COMP%_slideInUp {\\n  from {\\n    transform: translate3d(0, 100%, 0);\\n    visibility: visible;\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n}\\n.animate__slideInUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideInUp;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_slideOutDown {\\n  from {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(0, 100%, 0);\\n  }\\n}\\n.animate__slideOutDown[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideOutDown;\\n}\\n@keyframes _ngcontent-%COMP%_slideOutLeft {\\n  from {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(-100%, 0, 0);\\n  }\\n}\\n.animate__slideOutLeft[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideOutLeft;\\n}\\n@keyframes _ngcontent-%COMP%_slideOutRight {\\n  from {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(100%, 0, 0);\\n  }\\n}\\n.animate__slideOutRight[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideOutRight;\\n}\\n@keyframes _ngcontent-%COMP%_slideOutUp {\\n  from {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\\n  to {\\n    visibility: hidden;\\n    transform: translate3d(0, -100%, 0);\\n  }\\n}\\n.animate__slideOutUp[_ngcontent-%COMP%] {\\n  animation-name: _ngcontent-%COMP%_slideOutUp;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */.mat-ripple[_ngcontent-%COMP%] {\\n  overflow: hidden;\\n  position: relative;\\n}\\n.mat-ripple[_ngcontent-%COMP%]:not(:empty) {\\n  transform: translateZ(0);\\n}\\n\\n.mat-ripple.mat-ripple-unbounded[_ngcontent-%COMP%] {\\n  overflow: visible;\\n}\\n\\n.mat-ripple-element[_ngcontent-%COMP%] {\\n  position: absolute;\\n  border-radius: 50%;\\n  pointer-events: none;\\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n  transform: scale3d(0, 0, 0);\\n}\\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.cdk-visually-hidden[_ngcontent-%COMP%] {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  white-space: nowrap;\\n  outline: 0;\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  left: 0;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .cdk-visually-hidden[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: 0;\\n}\\n\\n.cdk-overlay-container[_ngcontent-%COMP%], .cdk-global-overlay-wrapper[_ngcontent-%COMP%] {\\n  pointer-events: none;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.cdk-overlay-container[_ngcontent-%COMP%] {\\n  position: fixed;\\n  z-index: 1000;\\n}\\n.cdk-overlay-container[_ngcontent-%COMP%]:empty {\\n  display: none;\\n}\\n\\n.cdk-global-overlay-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  position: absolute;\\n  z-index: 1000;\\n}\\n\\n.cdk-overlay-pane[_ngcontent-%COMP%] {\\n  position: absolute;\\n  pointer-events: auto;\\n  box-sizing: border-box;\\n  z-index: 1000;\\n  display: flex;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n\\n.cdk-overlay-backdrop[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1000;\\n  pointer-events: auto;\\n  -webkit-tap-highlight-color: transparent;\\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\\n  opacity: 0;\\n}\\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%] {\\n  opacity: 1;\\n}\\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .cdk-overlay-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%] {\\n  opacity: 0.6;\\n}\\n\\n.cdk-overlay-dark-backdrop[_ngcontent-%COMP%] {\\n  background: rgba(0, 0, 0, 0.32);\\n}\\n\\n.cdk-overlay-transparent-backdrop[_ngcontent-%COMP%] {\\n  transition: visibility 1ms linear, opacity 1ms linear;\\n  visibility: hidden;\\n  opacity: 1;\\n}\\n.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%] {\\n  opacity: 0;\\n  visibility: visible;\\n}\\n\\n.cdk-overlay-backdrop-noop-animation[_ngcontent-%COMP%] {\\n  transition: none;\\n}\\n\\n.cdk-overlay-connected-position-bounding-box[_ngcontent-%COMP%] {\\n  position: absolute;\\n  z-index: 1000;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 1px;\\n  min-height: 1px;\\n}\\n\\n.cdk-global-scrollblock[_ngcontent-%COMP%] {\\n  position: fixed;\\n  width: 100%;\\n  overflow-y: scroll;\\n}\\n\\ntextarea.cdk-textarea-autosize[_ngcontent-%COMP%] {\\n  resize: none;\\n}\\n\\ntextarea.cdk-textarea-autosize-measuring[_ngcontent-%COMP%] {\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important;\\n  height: auto !important;\\n  overflow: hidden !important;\\n}\\n\\ntextarea.cdk-textarea-autosize-measuring-firefox[_ngcontent-%COMP%] {\\n  padding: 2px 0 !important;\\n  box-sizing: content-box !important;\\n  height: 0 !important;\\n}\\n\\n@keyframes _ngcontent-%COMP%_cdk-text-field-autofill-start { \\n }\\n@keyframes _ngcontent-%COMP%_cdk-text-field-autofill-end { \\n }\\n.cdk-text-field-autofill-monitored[_ngcontent-%COMP%]:-webkit-autofill {\\n  animation: _ngcontent-%COMP%_cdk-text-field-autofill-start 0s 1ms;\\n}\\n\\n.cdk-text-field-autofill-monitored[_ngcontent-%COMP%]:not(:-webkit-autofill) {\\n  animation: _ngcontent-%COMP%_cdk-text-field-autofill-end 0s 1ms;\\n}\\n\\n.mat-focus-indicator[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.mat-focus-indicator[_ngcontent-%COMP%]::before {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  position: absolute;\\n  box-sizing: border-box;\\n  pointer-events: none;\\n  display: var(--mat-focus-indicator-display, none);\\n  border: var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);\\n  border-radius: var(--mat-focus-indicator-border-radius, 4px);\\n}\\n.mat-focus-indicator[_ngcontent-%COMP%]:focus::before {\\n  content: \\\"\\\";\\n}\\n\\n.cdk-high-contrast-active[_ngcontent-%COMP%] {\\n  --mat-focus-indicator-display: block;\\n}\\n\\n.mat-mdc-focus-indicator[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.mat-mdc-focus-indicator[_ngcontent-%COMP%]::before {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  position: absolute;\\n  box-sizing: border-box;\\n  pointer-events: none;\\n  display: var(--mat-mdc-focus-indicator-display, none);\\n  border: var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);\\n  border-radius: var(--mat-mdc-focus-indicator-border-radius, 4px);\\n}\\n.mat-mdc-focus-indicator[_ngcontent-%COMP%]:focus::before {\\n  content: \\\"\\\";\\n}\\n\\n.cdk-high-contrast-active[_ngcontent-%COMP%] {\\n  --mat-mdc-focus-indicator-display: block;\\n}\\n\\n.mat-ripple-element[_ngcontent-%COMP%] {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-option-selected-state-label-text-color: #3f51b5;\\n  --mat-option-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-option-hover-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-option-focus-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-option-selected-state-layer-color: rgba(0, 0, 0, 0.04);\\n}\\n\\n.mat-accent[_ngcontent-%COMP%] {\\n  --mat-option-selected-state-label-text-color: #ff4081;\\n}\\n\\n.mat-warn[_ngcontent-%COMP%] {\\n  --mat-option-selected-state-label-text-color: #f44336;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-optgroup-label-text-color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\\n  color: rgba(0, 0, 0, 0.54);\\n}\\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\\n  color: #b0b0b0;\\n}\\n\\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\\n  color: #3f51b5;\\n}\\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\\n  background: #3f51b5;\\n}\\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\\n  color: #fafafa;\\n}\\n\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\\n  color: #ff4081;\\n}\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\\n  background: #ff4081;\\n}\\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\\n  color: #fafafa;\\n}\\n\\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\\n  color: #ff4081;\\n}\\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\\n  background: #ff4081;\\n}\\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\\n  color: #fafafa;\\n}\\n\\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\\n  color: #f44336;\\n}\\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\\n  background: #f44336;\\n}\\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\\n  color: #fafafa;\\n}\\n\\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\\n  color: #b0b0b0;\\n}\\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\\n  background: #b0b0b0;\\n}\\n\\n.mat-app-background[_ngcontent-%COMP%] {\\n  background-color: #fafafa;\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.mat-mdc-card[_ngcontent-%COMP%] {\\n  --mdc-elevated-card-container-color: white;\\n  --mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  --mdc-outlined-card-container-color: white;\\n  --mdc-outlined-card-outline-color: rgba(0, 0, 0, 0.12);\\n  --mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\\n  --mat-card-subtitle-text-color: rgba(0, 0, 0, 0.54);\\n}\\n\\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\\n  --mdc-linear-progress-active-indicator-color: #3f51b5;\\n  --mdc-linear-progress-track-color: rgba(63, 81, 181, 0.25);\\n}\\n@keyframes _ngcontent-%COMP%_mdc-linear-progress-buffering {\\n  from {\\n    \\n \\n\\n  }\\n}\\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n  background-color: rgba(63, 81, 181, 0.25);\\n  \\n\\n  background-color: var(--mdc-linear-progress-track-color, rgba(63, 81, 181, 0.25));\\n}\\n@media (forced-colors: active) {\\n  .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n    background-color: ButtonBorder;\\n  }\\n}\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n    background-color: transparent;\\n    background-image: url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(63, 81, 181, 0.25)'/%3E%3C/svg%3E\\\");\\n  }\\n}\\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\\n  background-color: rgba(63, 81, 181, 0.25);\\n  \\n\\n  background-color: var(--mdc-linear-progress-track-color, rgba(63, 81, 181, 0.25));\\n}\\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-linear-progress-active-indicator-color: #ff4081;\\n  --mdc-linear-progress-track-color: rgba(255, 64, 129, 0.25);\\n}\\n@keyframes _ngcontent-%COMP%_mdc-linear-progress-buffering {\\n  from {\\n    \\n \\n\\n  }\\n}\\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 64, 129, 0.25);\\n  \\n\\n  background-color: var(--mdc-linear-progress-track-color, rgba(255, 64, 129, 0.25));\\n}\\n@media (forced-colors: active) {\\n  .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n    background-color: ButtonBorder;\\n  }\\n}\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n    background-color: transparent;\\n    background-image: url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 64, 129, 0.25)'/%3E%3C/svg%3E\\\");\\n  }\\n}\\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 64, 129, 0.25);\\n  \\n\\n  background-color: var(--mdc-linear-progress-track-color, rgba(255, 64, 129, 0.25));\\n}\\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-linear-progress-active-indicator-color: #f44336;\\n  --mdc-linear-progress-track-color: rgba(244, 67, 54, 0.25);\\n}\\n@keyframes _ngcontent-%COMP%_mdc-linear-progress-buffering {\\n  from {\\n    \\n \\n\\n  }\\n}\\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n  background-color: rgba(244, 67, 54, 0.25);\\n  \\n\\n  background-color: var(--mdc-linear-progress-track-color, rgba(244, 67, 54, 0.25));\\n}\\n@media (forced-colors: active) {\\n  .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n    background-color: ButtonBorder;\\n  }\\n}\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\\n    background-color: transparent;\\n    background-image: url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(244, 67, 54, 0.25)'/%3E%3C/svg%3E\\\");\\n  }\\n}\\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\\n  background-color: rgba(244, 67, 54, 0.25);\\n  \\n\\n  background-color: var(--mdc-linear-progress-track-color, rgba(244, 67, 54, 0.25));\\n}\\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\\n  --mdc-plain-tooltip-container-color: #616161;\\n  --mdc-plain-tooltip-supporting-text-color: #fff;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mdc-filled-text-field-caret-color: #3f51b5;\\n  --mdc-filled-text-field-focus-active-indicator-color: #3f51b5;\\n  --mdc-filled-text-field-focus-label-text-color: rgba(63, 81, 181, 0.87);\\n  --mdc-filled-text-field-container-color: whitesmoke;\\n  --mdc-filled-text-field-disabled-container-color: #fafafa;\\n  --mdc-filled-text-field-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mdc-filled-text-field-disabled-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-filled-text-field-input-text-color: rgba(0, 0, 0, 0.87);\\n  --mdc-filled-text-field-disabled-input-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-filled-text-field-input-text-placeholder-color: rgba(0, 0, 0, 0.6);\\n  --mdc-filled-text-field-error-focus-label-text-color: #f44336;\\n  --mdc-filled-text-field-error-label-text-color: #f44336;\\n  --mdc-filled-text-field-error-caret-color: #f44336;\\n  --mdc-filled-text-field-active-indicator-color: rgba(0, 0, 0, 0.42);\\n  --mdc-filled-text-field-disabled-active-indicator-color: rgba(0, 0, 0, 0.06);\\n  --mdc-filled-text-field-hover-active-indicator-color: rgba(0, 0, 0, 0.87);\\n  --mdc-filled-text-field-error-active-indicator-color: #f44336;\\n  --mdc-filled-text-field-error-focus-active-indicator-color: #f44336;\\n  --mdc-filled-text-field-error-hover-active-indicator-color: #f44336;\\n  --mdc-outlined-text-field-caret-color: #3f51b5;\\n  --mdc-outlined-text-field-focus-outline-color: #3f51b5;\\n  --mdc-outlined-text-field-focus-label-text-color: rgba(63, 81, 181, 0.87);\\n  --mdc-outlined-text-field-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mdc-outlined-text-field-disabled-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-outlined-text-field-input-text-color: rgba(0, 0, 0, 0.87);\\n  --mdc-outlined-text-field-disabled-input-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-outlined-text-field-input-text-placeholder-color: rgba(0, 0, 0, 0.6);\\n  --mdc-outlined-text-field-error-caret-color: #f44336;\\n  --mdc-outlined-text-field-error-focus-label-text-color: #f44336;\\n  --mdc-outlined-text-field-error-label-text-color: #f44336;\\n  --mdc-outlined-text-field-outline-color: rgba(0, 0, 0, 0.38);\\n  --mdc-outlined-text-field-disabled-outline-color: rgba(0, 0, 0, 0.06);\\n  --mdc-outlined-text-field-hover-outline-color: rgba(0, 0, 0, 0.87);\\n  --mdc-outlined-text-field-error-focus-outline-color: #f44336;\\n  --mdc-outlined-text-field-error-hover-outline-color: #f44336;\\n  --mdc-outlined-text-field-error-outline-color: #f44336;\\n  --mat-form-field-disabled-input-text-placeholder-color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\\n  color: var(--mdc-theme-error, #f44336);\\n}\\n\\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: var(--mat-form-field-subscript-text-font);\\n  line-height: var(--mat-form-field-subscript-text-line-height);\\n  font-size: var(--mat-form-field-subscript-text-size);\\n  letter-spacing: var(--mat-form-field-subscript-text-tracking);\\n  font-weight: var(--mat-form-field-subscript-text-weight);\\n}\\n\\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\\n  background-color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\\n  opacity: 0.04;\\n}\\n\\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\\n  opacity: 0.12;\\n}\\n\\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\\n  color: rgba(0, 0, 0, 0.54);\\n}\\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\\n  color: rgba(63, 81, 181, 0.87);\\n}\\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\\n  color: rgba(255, 64, 129, 0.87);\\n}\\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\\n  color: rgba(244, 67, 54, 0.87);\\n}\\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-filled-text-field-caret-color: #ff4081;\\n  --mdc-filled-text-field-focus-active-indicator-color: #ff4081;\\n  --mdc-filled-text-field-focus-label-text-color: rgba(255, 64, 129, 0.87);\\n  --mdc-outlined-text-field-caret-color: #ff4081;\\n  --mdc-outlined-text-field-focus-outline-color: #ff4081;\\n  --mdc-outlined-text-field-focus-label-text-color: rgba(255, 64, 129, 0.87);\\n}\\n\\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-filled-text-field-caret-color: #f44336;\\n  --mdc-filled-text-field-focus-active-indicator-color: #f44336;\\n  --mdc-filled-text-field-focus-label-text-color: rgba(244, 67, 54, 0.87);\\n  --mdc-outlined-text-field-caret-color: #f44336;\\n  --mdc-outlined-text-field-focus-outline-color: #f44336;\\n  --mdc-outlined-text-field-focus-label-text-color: rgba(244, 67, 54, 0.87);\\n}\\n\\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\\n  border-left: 1px solid transparent;\\n}\\n\\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\\n  border-left: none;\\n  border-right: 1px solid transparent;\\n}\\n\\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  min-height: 56px;\\n}\\n\\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\\n  top: 28px;\\n}\\n\\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\\n  --mat-mdc-form-field-label-transform: translateY(\\n          -34.75px)\\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\\n  transform: var(--mat-mdc-form-field-label-transform);\\n}\\n\\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 16px;\\n  padding-bottom: 16px;\\n}\\n\\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 24px;\\n  padding-bottom: 8px;\\n}\\n\\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 16px;\\n  padding-bottom: 16px;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-select-panel-background-color: white;\\n  --mat-select-enabled-trigger-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-select-disabled-trigger-text-color: rgba(0, 0, 0, 0.38);\\n  --mat-select-placeholder-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-select-enabled-arrow-color: rgba(0, 0, 0, 0.54);\\n  --mat-select-disabled-arrow-color: rgba(0, 0, 0, 0.38);\\n  --mat-select-focused-arrow-color: rgba(63, 81, 181, 0.87);\\n  --mat-select-invalid-arrow-color: rgba(244, 67, 54, 0.87);\\n}\\nhtml[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%] {\\n  --mat-select-panel-background-color: white;\\n  --mat-select-enabled-trigger-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-select-disabled-trigger-text-color: rgba(0, 0, 0, 0.38);\\n  --mat-select-placeholder-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-select-enabled-arrow-color: rgba(0, 0, 0, 0.54);\\n  --mat-select-disabled-arrow-color: rgba(0, 0, 0, 0.38);\\n  --mat-select-focused-arrow-color: rgba(255, 64, 129, 0.87);\\n  --mat-select-invalid-arrow-color: rgba(244, 67, 54, 0.87);\\n}\\nhtml[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%] {\\n  --mat-select-panel-background-color: white;\\n  --mat-select-enabled-trigger-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-select-disabled-trigger-text-color: rgba(0, 0, 0, 0.38);\\n  --mat-select-placeholder-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-select-enabled-arrow-color: rgba(0, 0, 0, 0.54);\\n  --mat-select-disabled-arrow-color: rgba(0, 0, 0, 0.38);\\n  --mat-select-focused-arrow-color: rgba(244, 67, 54, 0.87);\\n  --mat-select-invalid-arrow-color: rgba(244, 67, 54, 0.87);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-autocomplete-background-color: white;\\n}\\n\\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\\n  --mdc-dialog-container-color: white;\\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\\n}\\n\\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\\n  --mdc-chip-disabled-label-text-color: #212121;\\n  --mdc-chip-elevated-container-color: #e0e0e0;\\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\\n  --mdc-chip-focus-state-layer-color: black;\\n  --mdc-chip-focus-state-layer-opacity: 0.12;\\n  --mdc-chip-label-text-color: #212121;\\n  --mdc-chip-with-icon-icon-color: #212121;\\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\\n  --mdc-chip-with-icon-selected-icon-color: #212121;\\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\\n}\\n.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-chip-disabled-label-text-color: white;\\n  --mdc-chip-elevated-container-color: #3f51b5;\\n  --mdc-chip-elevated-disabled-container-color: #3f51b5;\\n  --mdc-chip-focus-state-layer-color: black;\\n  --mdc-chip-focus-state-layer-opacity: 0.12;\\n  --mdc-chip-label-text-color: white;\\n  --mdc-chip-with-icon-icon-color: white;\\n  --mdc-chip-with-icon-disabled-icon-color: white;\\n  --mdc-chip-with-icon-selected-icon-color: white;\\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\\n}\\n.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-chip-disabled-label-text-color: white;\\n  --mdc-chip-elevated-container-color: #ff4081;\\n  --mdc-chip-elevated-disabled-container-color: #ff4081;\\n  --mdc-chip-focus-state-layer-color: black;\\n  --mdc-chip-focus-state-layer-opacity: 0.12;\\n  --mdc-chip-label-text-color: white;\\n  --mdc-chip-with-icon-icon-color: white;\\n  --mdc-chip-with-icon-disabled-icon-color: white;\\n  --mdc-chip-with-icon-selected-icon-color: white;\\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\\n}\\n.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-chip-disabled-label-text-color: white;\\n  --mdc-chip-elevated-container-color: #f44336;\\n  --mdc-chip-elevated-disabled-container-color: #f44336;\\n  --mdc-chip-focus-state-layer-color: black;\\n  --mdc-chip-focus-state-layer-opacity: 0.12;\\n  --mdc-chip-label-text-color: white;\\n  --mdc-chip-with-icon-icon-color: white;\\n  --mdc-chip-with-icon-disabled-icon-color: white;\\n  --mdc-chip-with-icon-selected-icon-color: white;\\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\\n}\\n\\n.mat-mdc-chip.mat-mdc-standard-chip[_ngcontent-%COMP%] {\\n  --mdc-chip-container-height: 32px;\\n}\\n\\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\\n  --mdc-switch-selected-focus-state-layer-color: #3949ab;\\n  --mdc-switch-selected-handle-color: #3949ab;\\n  --mdc-switch-selected-hover-state-layer-color: #3949ab;\\n  --mdc-switch-selected-pressed-state-layer-color: #3949ab;\\n  --mdc-switch-selected-focus-handle-color: #1a237e;\\n  --mdc-switch-selected-hover-handle-color: #1a237e;\\n  --mdc-switch-selected-pressed-handle-color: #1a237e;\\n  --mdc-switch-selected-focus-track-color: #7986cb;\\n  --mdc-switch-selected-hover-track-color: #7986cb;\\n  --mdc-switch-selected-pressed-track-color: #7986cb;\\n  --mdc-switch-selected-track-color: #7986cb;\\n  --mdc-switch-disabled-selected-handle-color: #424242;\\n  --mdc-switch-disabled-selected-icon-color: #fff;\\n  --mdc-switch-disabled-selected-track-color: #424242;\\n  --mdc-switch-disabled-unselected-handle-color: #424242;\\n  --mdc-switch-disabled-unselected-icon-color: #fff;\\n  --mdc-switch-disabled-unselected-track-color: #424242;\\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\\n  --mdc-switch-handle-elevation-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\\n  --mdc-switch-handle-shadow-color: black;\\n  --mdc-switch-disabled-handle-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\\n  --mdc-switch-selected-icon-color: #fff;\\n  --mdc-switch-unselected-focus-handle-color: #212121;\\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\\n  --mdc-switch-unselected-handle-color: #616161;\\n  --mdc-switch-unselected-hover-handle-color: #212121;\\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\\n  --mdc-switch-unselected-icon-color: #fff;\\n  --mdc-switch-unselected-pressed-handle-color: #212121;\\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\\n  --mdc-switch-unselected-track-color: #e0e0e0;\\n}\\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\\n}\\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-switch-selected-focus-state-layer-color: #d81b60;\\n  --mdc-switch-selected-handle-color: #d81b60;\\n  --mdc-switch-selected-hover-state-layer-color: #d81b60;\\n  --mdc-switch-selected-pressed-state-layer-color: #d81b60;\\n  --mdc-switch-selected-focus-handle-color: #880e4f;\\n  --mdc-switch-selected-hover-handle-color: #880e4f;\\n  --mdc-switch-selected-pressed-handle-color: #880e4f;\\n  --mdc-switch-selected-focus-track-color: #f06292;\\n  --mdc-switch-selected-hover-track-color: #f06292;\\n  --mdc-switch-selected-pressed-track-color: #f06292;\\n  --mdc-switch-selected-track-color: #f06292;\\n}\\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-switch-selected-focus-state-layer-color: #e53935;\\n  --mdc-switch-selected-handle-color: #e53935;\\n  --mdc-switch-selected-hover-state-layer-color: #e53935;\\n  --mdc-switch-selected-pressed-state-layer-color: #e53935;\\n  --mdc-switch-selected-focus-handle-color: #b71c1c;\\n  --mdc-switch-selected-hover-handle-color: #b71c1c;\\n  --mdc-switch-selected-pressed-handle-color: #b71c1c;\\n  --mdc-switch-selected-focus-track-color: #e57373;\\n  --mdc-switch-selected-hover-track-color: #e57373;\\n  --mdc-switch-selected-pressed-track-color: #e57373;\\n  --mdc-switch-selected-track-color: #e57373;\\n}\\n\\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\\n  --mdc-switch-state-layer-size: 48px;\\n}\\n\\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\\n}\\n\\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-radio-disabled-selected-icon-color: #000;\\n  --mdc-radio-disabled-unselected-icon-color: #000;\\n  --mdc-radio-unselected-hover-icon-color: #212121;\\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-selected-focus-icon-color: #3f51b5;\\n  --mdc-radio-selected-hover-icon-color: #3f51b5;\\n  --mdc-radio-selected-icon-color: #3f51b5;\\n  --mdc-radio-selected-pressed-icon-color: #3f51b5;\\n  --mat-radio-ripple-color: #000;\\n  --mat-radio-checked-ripple-color: #3f51b5;\\n  --mat-radio-disabled-label-color: rgba(0, 0, 0, 0.38);\\n}\\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-radio-disabled-selected-icon-color: #000;\\n  --mdc-radio-disabled-unselected-icon-color: #000;\\n  --mdc-radio-unselected-hover-icon-color: #212121;\\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-selected-focus-icon-color: #ff4081;\\n  --mdc-radio-selected-hover-icon-color: #ff4081;\\n  --mdc-radio-selected-icon-color: #ff4081;\\n  --mdc-radio-selected-pressed-icon-color: #ff4081;\\n  --mat-radio-ripple-color: #000;\\n  --mat-radio-checked-ripple-color: #ff4081;\\n  --mat-radio-disabled-label-color: rgba(0, 0, 0, 0.38);\\n}\\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-radio-disabled-selected-icon-color: #000;\\n  --mdc-radio-disabled-unselected-icon-color: #000;\\n  --mdc-radio-unselected-hover-icon-color: #212121;\\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-selected-focus-icon-color: #f44336;\\n  --mdc-radio-selected-hover-icon-color: #f44336;\\n  --mdc-radio-selected-icon-color: #f44336;\\n  --mdc-radio-selected-pressed-icon-color: #f44336;\\n  --mat-radio-ripple-color: #000;\\n  --mat-radio-checked-ripple-color: #f44336;\\n  --mat-radio-disabled-label-color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\\n  --mdc-radio-state-layer-size: 40px;\\n}\\n\\n.mat-mdc-slider[_ngcontent-%COMP%] {\\n  --mdc-slider-label-container-color: black;\\n  --mdc-slider-label-label-text-color: white;\\n  --mdc-slider-disabled-handle-color: #000;\\n  --mdc-slider-disabled-active-track-color: #000;\\n  --mdc-slider-disabled-inactive-track-color: #000;\\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\\n}\\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-slider-handle-color: #3f51b5;\\n  --mdc-slider-focus-handle-color: #3f51b5;\\n  --mdc-slider-hover-handle-color: #3f51b5;\\n  --mdc-slider-active-track-color: #3f51b5;\\n  --mdc-slider-inactive-track-color: #3f51b5;\\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\\n  --mdc-slider-with-tick-marks-inactive-container-color: #3f51b5;\\n  --mat-mdc-slider-ripple-color: #3f51b5;\\n  --mat-mdc-slider-hover-ripple-color: rgba(63, 81, 181, 0.05);\\n  --mat-mdc-slider-focus-ripple-color: rgba(63, 81, 181, 0.2);\\n}\\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-slider-handle-color: #ff4081;\\n  --mdc-slider-focus-handle-color: #ff4081;\\n  --mdc-slider-hover-handle-color: #ff4081;\\n  --mdc-slider-active-track-color: #ff4081;\\n  --mdc-slider-inactive-track-color: #ff4081;\\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\\n  --mdc-slider-with-tick-marks-inactive-container-color: #ff4081;\\n  --mat-mdc-slider-ripple-color: #ff4081;\\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 64, 129, 0.05);\\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 64, 129, 0.2);\\n}\\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-slider-handle-color: #f44336;\\n  --mdc-slider-focus-handle-color: #f44336;\\n  --mdc-slider-hover-handle-color: #f44336;\\n  --mdc-slider-active-track-color: #f44336;\\n  --mdc-slider-inactive-track-color: #f44336;\\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\\n  --mdc-slider-with-tick-marks-inactive-container-color: #f44336;\\n  --mat-mdc-slider-ripple-color: #f44336;\\n  --mat-mdc-slider-hover-ripple-color: rgba(244, 67, 54, 0.05);\\n  --mat-mdc-slider-focus-ripple-color: rgba(244, 67, 54, 0.2);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-menu-item-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-menu-item-icon-color: rgba(0, 0, 0, 0.87);\\n  --mat-menu-item-hover-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-menu-item-focus-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-menu-container-color: white;\\n}\\n\\n.mat-mdc-list-base[_ngcontent-%COMP%] {\\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-list-list-item-disabled-label-text-color: black;\\n  --mdc-list-list-item-disabled-leading-icon-color: black;\\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mdc-list-list-item-hover-state-layer-color: black;\\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\\n  --mdc-list-list-item-focus-state-layer-color: black;\\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\\n}\\n\\n.mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item__end[_ngcontent-%COMP%] {\\n  --mdc-radio-disabled-selected-icon-color: #000;\\n  --mdc-radio-disabled-unselected-icon-color: #000;\\n  --mdc-radio-unselected-hover-icon-color: #212121;\\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-selected-focus-icon-color: #3f51b5;\\n  --mdc-radio-selected-hover-icon-color: #3f51b5;\\n  --mdc-radio-selected-icon-color: #3f51b5;\\n  --mdc-radio-selected-pressed-icon-color: #3f51b5;\\n}\\n\\n.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\\n  --mdc-radio-disabled-selected-icon-color: #000;\\n  --mdc-radio-disabled-unselected-icon-color: #000;\\n  --mdc-radio-unselected-hover-icon-color: #212121;\\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-selected-focus-icon-color: #ff4081;\\n  --mdc-radio-selected-hover-icon-color: #ff4081;\\n  --mdc-radio-selected-icon-color: #ff4081;\\n  --mdc-radio-selected-pressed-icon-color: #ff4081;\\n}\\n\\n.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\\n  --mdc-radio-disabled-selected-icon-color: #000;\\n  --mdc-radio-disabled-unselected-icon-color: #000;\\n  --mdc-radio-unselected-hover-icon-color: #212121;\\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-radio-selected-focus-icon-color: #f44336;\\n  --mdc-radio-selected-hover-icon-color: #f44336;\\n  --mdc-radio-selected-icon-color: #f44336;\\n  --mdc-radio-selected-pressed-icon-color: #f44336;\\n}\\n\\n.mat-mdc-list-option[_ngcontent-%COMP%] {\\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-selected-checkmark-color: #fff;\\n  --mdc-checkbox-selected-focus-icon-color: #3f51b5;\\n  --mdc-checkbox-selected-hover-icon-color: #3f51b5;\\n  --mdc-checkbox-selected-icon-color: #3f51b5;\\n  --mdc-checkbox-selected-pressed-icon-color: #3f51b5;\\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-selected-focus-state-layer-color: #3f51b5;\\n  --mdc-checkbox-selected-hover-state-layer-color: #3f51b5;\\n  --mdc-checkbox-selected-pressed-state-layer-color: #3f51b5;\\n  --mdc-checkbox-unselected-focus-state-layer-color: black;\\n  --mdc-checkbox-unselected-hover-state-layer-color: black;\\n  --mdc-checkbox-unselected-pressed-state-layer-color: black;\\n}\\n\\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-selected-checkmark-color: #fff;\\n  --mdc-checkbox-selected-focus-icon-color: #ff4081;\\n  --mdc-checkbox-selected-hover-icon-color: #ff4081;\\n  --mdc-checkbox-selected-icon-color: #ff4081;\\n  --mdc-checkbox-selected-pressed-icon-color: #ff4081;\\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-selected-focus-state-layer-color: #ff4081;\\n  --mdc-checkbox-selected-hover-state-layer-color: #ff4081;\\n  --mdc-checkbox-selected-pressed-state-layer-color: #ff4081;\\n  --mdc-checkbox-unselected-focus-state-layer-color: black;\\n  --mdc-checkbox-unselected-hover-state-layer-color: black;\\n  --mdc-checkbox-unselected-pressed-state-layer-color: black;\\n}\\n\\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-selected-checkmark-color: #fff;\\n  --mdc-checkbox-selected-focus-icon-color: #f44336;\\n  --mdc-checkbox-selected-hover-icon-color: #f44336;\\n  --mdc-checkbox-selected-icon-color: #f44336;\\n  --mdc-checkbox-selected-pressed-icon-color: #f44336;\\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-selected-focus-state-layer-color: #f44336;\\n  --mdc-checkbox-selected-hover-state-layer-color: #f44336;\\n  --mdc-checkbox-selected-pressed-state-layer-color: #f44336;\\n  --mdc-checkbox-unselected-focus-state-layer-color: black;\\n  --mdc-checkbox-unselected-hover-state-layer-color: black;\\n  --mdc-checkbox-unselected-pressed-state-layer-color: black;\\n}\\n\\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\\n  color: #3f51b5;\\n}\\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\\n  color: #3f51b5;\\n}\\n\\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\\n  opacity: 1;\\n}\\n\\n.mat-mdc-list-base[_ngcontent-%COMP%] {\\n  --mdc-list-list-item-one-line-container-height: 48px;\\n  --mdc-list-list-item-two-line-container-height: 64px;\\n  --mdc-list-list-item-three-line-container-height: 88px;\\n}\\n\\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\\n  height: 56px;\\n}\\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\\n  height: 72px;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-paginator-container-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-paginator-container-background-color: white;\\n  --mat-paginator-enabled-icon-color: rgba(0, 0, 0, 0.54);\\n  --mat-paginator-disabled-icon-color: rgba(0, 0, 0, 0.12);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-paginator-container-size: 56px;\\n}\\n\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  min-height: 40px;\\n}\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\\n  top: 20px;\\n}\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\\n  --mat-mdc-form-field-label-transform: translateY(\\n          -26.75px)\\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\\n  transform: var(--mat-mdc-form-field-label-transform);\\n}\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 8px;\\n  padding-bottom: 8px;\\n}\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 8px;\\n  padding-bottom: 8px;\\n}\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\\n  padding-top: 8px;\\n  padding-bottom: 8px;\\n}\\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.mat-mdc-tab-group[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar[_ngcontent-%COMP%] {\\n  --mdc-tab-indicator-active-indicator-color: #3f51b5;\\n  --mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, 0.38);\\n  --mat-tab-header-pagination-icon-color: #000;\\n  --mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-active-label-text-color: #3f51b5;\\n  --mat-tab-header-active-ripple-color: #3f51b5;\\n  --mat-tab-header-inactive-ripple-color: #3f51b5;\\n  --mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-active-focus-label-text-color: #3f51b5;\\n  --mat-tab-header-active-hover-label-text-color: #3f51b5;\\n  --mat-tab-header-active-focus-indicator-color: #3f51b5;\\n  --mat-tab-header-active-hover-indicator-color: #3f51b5;\\n}\\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-tab-indicator-active-indicator-color: #ff4081;\\n  --mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, 0.38);\\n  --mat-tab-header-pagination-icon-color: #000;\\n  --mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-active-label-text-color: #ff4081;\\n  --mat-tab-header-active-ripple-color: #ff4081;\\n  --mat-tab-header-inactive-ripple-color: #ff4081;\\n  --mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-active-focus-label-text-color: #ff4081;\\n  --mat-tab-header-active-hover-label-text-color: #ff4081;\\n  --mat-tab-header-active-focus-indicator-color: #ff4081;\\n  --mat-tab-header-active-hover-indicator-color: #ff4081;\\n}\\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-tab-indicator-active-indicator-color: #f44336;\\n  --mat-tab-header-disabled-ripple-color: rgba(0, 0, 0, 0.38);\\n  --mat-tab-header-pagination-icon-color: #000;\\n  --mat-tab-header-inactive-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-active-label-text-color: #f44336;\\n  --mat-tab-header-active-ripple-color: #f44336;\\n  --mat-tab-header-inactive-ripple-color: #f44336;\\n  --mat-tab-header-inactive-focus-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-inactive-hover-label-text-color: rgba(0, 0, 0, 0.6);\\n  --mat-tab-header-active-focus-label-text-color: #f44336;\\n  --mat-tab-header-active-hover-label-text-color: #f44336;\\n  --mat-tab-header-active-focus-indicator-color: #f44336;\\n  --mat-tab-header-active-hover-indicator-color: #f44336;\\n}\\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\\n  --mat-tab-header-with-background-background-color: #3f51b5;\\n  --mat-tab-header-with-background-foreground-color: white;\\n}\\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\\n  --mat-tab-header-with-background-background-color: #ff4081;\\n  --mat-tab-header-with-background-foreground-color: white;\\n}\\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\\n  --mat-tab-header-with-background-background-color: #f44336;\\n  --mat-tab-header-with-background-foreground-color: white;\\n}\\n\\n.mat-mdc-tab-header[_ngcontent-%COMP%] {\\n  --mdc-secondary-navigation-tab-container-height: 48px;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-selected-checkmark-color: #fff;\\n  --mdc-checkbox-selected-focus-icon-color: #ff4081;\\n  --mdc-checkbox-selected-hover-icon-color: #ff4081;\\n  --mdc-checkbox-selected-icon-color: #ff4081;\\n  --mdc-checkbox-selected-pressed-icon-color: #ff4081;\\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-selected-focus-state-layer-color: #ff4081;\\n  --mdc-checkbox-selected-hover-state-layer-color: #ff4081;\\n  --mdc-checkbox-selected-pressed-state-layer-color: #ff4081;\\n  --mdc-checkbox-unselected-focus-state-layer-color: black;\\n  --mdc-checkbox-unselected-hover-state-layer-color: black;\\n  --mdc-checkbox-unselected-pressed-state-layer-color: black;\\n}\\n\\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-selected-checkmark-color: #fff;\\n  --mdc-checkbox-selected-focus-icon-color: #3f51b5;\\n  --mdc-checkbox-selected-hover-icon-color: #3f51b5;\\n  --mdc-checkbox-selected-icon-color: #3f51b5;\\n  --mdc-checkbox-selected-pressed-icon-color: #3f51b5;\\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-selected-focus-state-layer-color: #3f51b5;\\n  --mdc-checkbox-selected-hover-state-layer-color: #3f51b5;\\n  --mdc-checkbox-selected-pressed-state-layer-color: #3f51b5;\\n  --mdc-checkbox-unselected-focus-state-layer-color: black;\\n  --mdc-checkbox-unselected-hover-state-layer-color: black;\\n  --mdc-checkbox-unselected-pressed-state-layer-color: black;\\n}\\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-checkbox-selected-checkmark-color: #fff;\\n  --mdc-checkbox-selected-focus-icon-color: #f44336;\\n  --mdc-checkbox-selected-hover-icon-color: #f44336;\\n  --mdc-checkbox-selected-icon-color: #f44336;\\n  --mdc-checkbox-selected-pressed-icon-color: #f44336;\\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\\n  --mdc-checkbox-selected-focus-state-layer-color: #f44336;\\n  --mdc-checkbox-selected-hover-state-layer-color: #f44336;\\n  --mdc-checkbox-selected-pressed-state-layer-color: #f44336;\\n  --mdc-checkbox-unselected-focus-state-layer-color: black;\\n  --mdc-checkbox-unselected-hover-state-layer-color: black;\\n  --mdc-checkbox-unselected-pressed-state-layer-color: black;\\n}\\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\\n}\\n.mat-mdc-checkbox.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mdc-checkbox-state-layer-size: 40px;\\n}\\n\\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\\n  --mdc-text-button-label-text-color: #000;\\n}\\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-text-button-label-text-color: #3f51b5;\\n}\\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-text-button-label-text-color: #ff4081;\\n}\\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-text-button-label-text-color: #f44336;\\n}\\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\\n  --mdc-filled-button-container-color: #fff;\\n  --mdc-filled-button-label-text-color: #000;\\n}\\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-filled-button-container-color: #3f51b5;\\n  --mdc-filled-button-label-text-color: #fff;\\n}\\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-filled-button-container-color: #ff4081;\\n  --mdc-filled-button-label-text-color: #fff;\\n}\\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-filled-button-container-color: #f44336;\\n  --mdc-filled-button-label-text-color: #fff;\\n}\\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\\n  --mdc-protected-button-container-color: #fff;\\n  --mdc-protected-button-label-text-color: #000;\\n}\\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-protected-button-container-color: #3f51b5;\\n  --mdc-protected-button-label-text-color: #fff;\\n}\\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-protected-button-container-color: #ff4081;\\n  --mdc-protected-button-label-text-color: #fff;\\n}\\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-protected-button-container-color: #f44336;\\n  --mdc-protected-button-label-text-color: #fff;\\n}\\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-protected-button-container-elevation: 0;\\n}\\n\\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\\n}\\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\\n  --mdc-outlined-button-label-text-color: #000;\\n}\\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-outlined-button-label-text-color: #3f51b5;\\n}\\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-outlined-button-label-text-color: #ff4081;\\n}\\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-outlined-button-label-text-color: #f44336;\\n}\\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\\n}\\n\\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #000;\\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\\n}\\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.04;\\n}\\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #3f51b5;\\n  --mat-mdc-button-ripple-color: rgba(63, 81, 181, 0.1);\\n}\\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #ff4081;\\n  --mat-mdc-button-ripple-color: rgba(255, 64, 129, 0.1);\\n}\\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #f44336;\\n  --mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1);\\n}\\n\\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #000;\\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\\n}\\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.04;\\n}\\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #fff;\\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\\n}\\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #fff;\\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\\n}\\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #fff;\\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\\n  height: 36px;\\n}\\n\\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #000;\\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\\n  --mdc-icon-button-icon-color: inherit;\\n  --mat-mdc-button-persistent-ripple-color: #000;\\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\\n}\\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.04;\\n}\\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #6200ee;\\n  --mat-mdc-button-ripple-color: rgba(98, 0, 238, 0.1);\\n}\\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #018786;\\n  --mat-mdc-button-ripple-color: rgba(1, 135, 134, 0.1);\\n}\\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #b00020;\\n  --mat-mdc-button-ripple-color: rgba(176, 0, 32, 0.1);\\n}\\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-icon-button-icon-color: #3f51b5;\\n  --mat-mdc-button-persistent-ripple-color: #3f51b5;\\n  --mat-mdc-button-ripple-color: rgba(63, 81, 181, 0.1);\\n}\\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-icon-button-icon-color: #ff4081;\\n  --mat-mdc-button-persistent-ripple-color: #ff4081;\\n  --mat-mdc-button-ripple-color: rgba(255, 64, 129, 0.1);\\n}\\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-icon-button-icon-color: #f44336;\\n  --mat-mdc-button-persistent-ripple-color: #f44336;\\n  --mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1);\\n}\\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\\n  --mdc-icon-button-state-layer-size: 48px;\\n  width: var(--mdc-icon-button-state-layer-size);\\n  height: var(--mdc-icon-button-state-layer-size);\\n  padding: 12px;\\n}\\n\\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #000;\\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\\n}\\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.04;\\n}\\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\\n  opacity: 0.12;\\n}\\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #fff;\\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\\n}\\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #fff;\\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\\n}\\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\\n  --mat-mdc-button-persistent-ripple-color: #fff;\\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\\n}\\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\\n}\\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\\n  --mdc-fab-container-color: white;\\n  --mdc-fab-icon-color: black;\\n  --mat-mdc-fab-color: #000;\\n}\\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\\n  --mdc-fab-container-color: #3f51b5;\\n  --mdc-fab-icon-color: white;\\n  --mat-mdc-fab-color: #fff;\\n}\\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-fab-container-color: #ff4081;\\n  --mdc-fab-icon-color: white;\\n  --mat-mdc-fab-color: #fff;\\n}\\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-fab-container-color: #f44336;\\n  --mdc-fab-icon-color: white;\\n  --mat-mdc-fab-color: #fff;\\n}\\n\\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\\n  --mdc-snackbar-container-color: #333333;\\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\\n  --mat-snack-bar-button-color: #ff4081;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-table-background-color: white;\\n  --mat-table-header-headline-color: rgba(0, 0, 0, 0.87);\\n  --mat-table-row-item-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-table-row-item-outline-color: rgba(0, 0, 0, 0.12);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-table-header-container-height: 56px;\\n  --mat-table-footer-container-height: 52px;\\n  --mat-table-row-item-container-height: 52px;\\n}\\n\\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\\n  --mdc-circular-progress-active-indicator-color: #3f51b5;\\n}\\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\\n  --mdc-circular-progress-active-indicator-color: #ff4081;\\n}\\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\\n  --mdc-circular-progress-active-indicator-color: #f44336;\\n}\\n\\n.mat-badge[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\\n  overflow: visible;\\n}\\n\\n.mat-badge-content[_ngcontent-%COMP%] {\\n  position: absolute;\\n  text-align: center;\\n  display: inline-block;\\n  border-radius: 50%;\\n  transition: transform 200ms ease-in-out;\\n  transform: scale(0.6);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  pointer-events: none;\\n  background-color: var(--mat-badge-background-color);\\n  color: var(--mat-badge-text-color);\\n  font-family: Roboto, sans-serif;\\n  \\n\\n  font-family: var(--mat-badge-text-font, Roboto, sans-serif);\\n  font-size: 12px;\\n  \\n\\n  font-size: var(--mat-badge-text-size, 12px);\\n  font-weight: 600;\\n  \\n\\n  font-weight: var(--mat-badge-text-weight, 600);\\n}\\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  outline: solid 1px;\\n  border-radius: 0;\\n}\\n\\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  background-color: var(--mat-badge-disabled-state-background-color);\\n  color: var(--mat-badge-disabled-state-text-color);\\n}\\n\\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\\n  transition: none;\\n}\\n\\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\\n  transform: none;\\n}\\n\\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  width: 16px;\\n  height: 16px;\\n  line-height: 16px;\\n  font-size: 9px;\\n  \\n\\n  font-size: var(--mat-badge-small-size-text-size, 9px);\\n}\\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  top: -8px;\\n}\\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  bottom: -8px;\\n}\\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: -16px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: -16px;\\n}\\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: -16px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: auto;\\n  left: -16px;\\n}\\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: -8px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: -8px;\\n}\\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: -8px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: auto;\\n  left: -8px;\\n}\\n\\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  width: 22px;\\n  height: 22px;\\n  line-height: 22px;\\n}\\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  top: -11px;\\n}\\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  bottom: -11px;\\n}\\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: -22px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: -22px;\\n}\\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: -22px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: auto;\\n  left: -22px;\\n}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: -11px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: -11px;\\n}\\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: -11px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: auto;\\n  left: -11px;\\n}\\n\\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  width: 28px;\\n  height: 28px;\\n  line-height: 28px;\\n  font-size: 24px;\\n  \\n\\n  font-size: var(--mat-badge-large-size-text-size, 24px);\\n}\\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  top: -14px;\\n}\\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  bottom: -14px;\\n}\\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: -28px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: -28px;\\n}\\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: -28px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: auto;\\n  left: -28px;\\n}\\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: -14px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  left: auto;\\n  right: -14px;\\n}\\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: -14px;\\n}\\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\\n  right: auto;\\n  left: -14px;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-badge-background-color: #3f51b5;\\n  --mat-badge-text-color: white;\\n  --mat-badge-disabled-state-background-color: #b9b9b9;\\n  --mat-badge-disabled-state-text-color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.mat-badge-accent[_ngcontent-%COMP%] {\\n  --mat-badge-background-color: #ff4081;\\n  --mat-badge-text-color: white;\\n}\\n\\n.mat-badge-warn[_ngcontent-%COMP%] {\\n  --mat-badge-background-color: #f44336;\\n  --mat-badge-text-color: white;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-bottom-sheet-container-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-bottom-sheet-container-background-color: white;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-legacy-button-toggle-text-color: rgba(0, 0, 0, 0.38);\\n  --mat-legacy-button-toggle-state-layer-color: rgba(0, 0, 0, 0.12);\\n  --mat-legacy-button-toggle-selected-state-text-color: rgba(0, 0, 0, 0.54);\\n  --mat-legacy-button-toggle-selected-state-background-color: #e0e0e0;\\n  --mat-legacy-button-toggle-disabled-state-text-color: rgba(0, 0, 0, 0.26);\\n  --mat-legacy-button-toggle-disabled-state-background-color: #eeeeee;\\n  --mat-legacy-button-toggle-disabled-selected-state-background-color: #bdbdbd;\\n  --mat-standard-button-toggle-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-standard-button-toggle-background-color: white;\\n  --mat-standard-button-toggle-state-layer-color: black;\\n  --mat-standard-button-toggle-selected-state-background-color: #e0e0e0;\\n  --mat-standard-button-toggle-selected-state-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-standard-button-toggle-disabled-state-text-color: rgba(0, 0, 0, 0.26);\\n  --mat-standard-button-toggle-disabled-state-background-color: white;\\n  --mat-standard-button-toggle-disabled-selected-state-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-standard-button-toggle-disabled-selected-state-background-color: #bdbdbd;\\n  --mat-standard-button-toggle-divider-color: #e0e0e0;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-standard-button-toggle-height: 48px;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-datepicker-calendar-date-selected-state-text-color: white;\\n  --mat-datepicker-calendar-date-selected-state-background-color: #3f51b5;\\n  --mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(63, 81, 181, 0.4);\\n  --mat-datepicker-calendar-date-today-selected-state-outline-color: white;\\n  --mat-datepicker-calendar-date-focus-state-background-color: rgba(63, 81, 181, 0.3);\\n  --mat-datepicker-calendar-date-hover-state-background-color: rgba(63, 81, 181, 0.3);\\n  --mat-datepicker-toggle-active-state-icon-color: #3f51b5;\\n  --mat-datepicker-calendar-date-in-range-state-background-color: rgba(63, 81, 181, 0.2);\\n  --mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, 0.2);\\n  --mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;\\n  --mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;\\n  --mat-datepicker-toggle-icon-color: rgba(0, 0, 0, 0.54);\\n  --mat-datepicker-calendar-body-label-text-color: rgba(0, 0, 0, 0.54);\\n  --mat-datepicker-calendar-period-button-icon-color: rgba(0, 0, 0, 0.54);\\n  --mat-datepicker-calendar-navigation-button-icon-color: rgba(0, 0, 0, 0.54);\\n  --mat-datepicker-calendar-header-divider-color: rgba(0, 0, 0, 0.12);\\n  --mat-datepicker-calendar-header-text-color: rgba(0, 0, 0, 0.54);\\n  --mat-datepicker-calendar-date-today-outline-color: rgba(0, 0, 0, 0.38);\\n  --mat-datepicker-calendar-date-today-disabled-state-outline-color: rgba(0, 0, 0, 0.18);\\n  --mat-datepicker-calendar-date-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-datepicker-calendar-date-outline-color: transparent;\\n  --mat-datepicker-calendar-date-disabled-state-text-color: rgba(0, 0, 0, 0.38);\\n  --mat-datepicker-calendar-date-preview-state-outline-color: rgba(0, 0, 0, 0.24);\\n  --mat-datepicker-range-input-separator-color: rgba(0, 0, 0, 0.87);\\n  --mat-datepicker-range-input-disabled-state-separator-color: rgba(0, 0, 0, 0.38);\\n  --mat-datepicker-range-input-disabled-state-text-color: rgba(0, 0, 0, 0.38);\\n  --mat-datepicker-calendar-container-background-color: white;\\n  --mat-datepicker-calendar-container-text-color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%] {\\n  --mat-datepicker-calendar-date-selected-state-text-color: white;\\n  --mat-datepicker-calendar-date-selected-state-background-color: #ff4081;\\n  --mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(255, 64, 129, 0.4);\\n  --mat-datepicker-calendar-date-today-selected-state-outline-color: white;\\n  --mat-datepicker-calendar-date-focus-state-background-color: rgba(255, 64, 129, 0.3);\\n  --mat-datepicker-calendar-date-hover-state-background-color: rgba(255, 64, 129, 0.3);\\n  --mat-datepicker-calendar-date-in-range-state-background-color: rgba(255, 64, 129, 0.2);\\n  --mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, 0.2);\\n  --mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;\\n  --mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;\\n}\\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%] {\\n  --mat-datepicker-calendar-date-selected-state-text-color: white;\\n  --mat-datepicker-calendar-date-selected-state-background-color: #f44336;\\n  --mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(244, 67, 54, 0.4);\\n  --mat-datepicker-calendar-date-today-selected-state-outline-color: white;\\n  --mat-datepicker-calendar-date-focus-state-background-color: rgba(244, 67, 54, 0.3);\\n  --mat-datepicker-calendar-date-hover-state-background-color: rgba(244, 67, 54, 0.3);\\n  --mat-datepicker-calendar-date-in-range-state-background-color: rgba(244, 67, 54, 0.2);\\n  --mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, 0.2);\\n  --mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;\\n  --mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;\\n}\\n\\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\\n  --mat-datepicker-toggle-active-state-icon-color: #ff4081;\\n}\\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\\n  --mat-datepicker-toggle-active-state-icon-color: #f44336;\\n}\\n\\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\\n  --mdc-icon-button-state-layer-size: 40px;\\n  width: var(--mdc-icon-button-state-layer-size);\\n  height: var(--mdc-icon-button-state-layer-size);\\n  padding: 8px;\\n}\\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-divider-color: rgba(0, 0, 0, 0.12);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-expansion-container-background-color: white;\\n  --mat-expansion-container-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-expansion-actions-divider-color: rgba(0, 0, 0, 0.12);\\n  --mat-expansion-header-hover-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-expansion-header-focus-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-expansion-header-disabled-state-text-color: rgba(0, 0, 0, 0.26);\\n  --mat-expansion-header-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-expansion-header-description-color: rgba(0, 0, 0, 0.54);\\n  --mat-expansion-header-indicator-color: rgba(0, 0, 0, 0.54);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-expansion-header-collapsed-state-height: 48px;\\n  --mat-expansion-header-expanded-state-height: 64px;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-icon-color: inherit;\\n}\\n\\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\\n  --mat-icon-color: #3f51b5;\\n}\\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\\n  --mat-icon-color: #ff4081;\\n}\\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\\n  --mat-icon-color: #f44336;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-sidenav-container-divider-color: rgba(0, 0, 0, 0.12);\\n  --mat-sidenav-container-background-color: white;\\n  --mat-sidenav-container-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-sidenav-content-background-color: #fafafa;\\n  --mat-sidenav-content-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-sidenav-scrim-color: rgba(0, 0, 0, 0.6);\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-stepper-header-icon-foreground-color: white;\\n  --mat-stepper-header-selected-state-icon-background-color: #3f51b5;\\n  --mat-stepper-header-selected-state-icon-foreground-color: white;\\n  --mat-stepper-header-done-state-icon-background-color: #3f51b5;\\n  --mat-stepper-header-done-state-icon-foreground-color: white;\\n  --mat-stepper-header-edit-state-icon-background-color: #3f51b5;\\n  --mat-stepper-header-edit-state-icon-foreground-color: white;\\n  --mat-stepper-container-color: white;\\n  --mat-stepper-line-color: rgba(0, 0, 0, 0.12);\\n  --mat-stepper-header-hover-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-stepper-header-focus-state-layer-color: rgba(0, 0, 0, 0.04);\\n  --mat-stepper-header-label-text-color: rgba(0, 0, 0, 0.54);\\n  --mat-stepper-header-optional-label-text-color: rgba(0, 0, 0, 0.54);\\n  --mat-stepper-header-selected-state-label-text-color: rgba(0, 0, 0, 0.87);\\n  --mat-stepper-header-error-state-label-text-color: #f44336;\\n  --mat-stepper-header-icon-background-color: rgba(0, 0, 0, 0.54);\\n  --mat-stepper-header-error-state-icon-foreground-color: #f44336;\\n  --mat-stepper-header-error-state-icon-background-color: transparent;\\n}\\nhtml[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%] {\\n  --mat-stepper-header-icon-foreground-color: white;\\n  --mat-stepper-header-selected-state-icon-background-color: #ff4081;\\n  --mat-stepper-header-selected-state-icon-foreground-color: white;\\n  --mat-stepper-header-done-state-icon-background-color: #ff4081;\\n  --mat-stepper-header-done-state-icon-foreground-color: white;\\n  --mat-stepper-header-edit-state-icon-background-color: #ff4081;\\n  --mat-stepper-header-edit-state-icon-foreground-color: white;\\n}\\nhtml[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%] {\\n  --mat-stepper-header-icon-foreground-color: white;\\n  --mat-stepper-header-selected-state-icon-background-color: #f44336;\\n  --mat-stepper-header-selected-state-icon-foreground-color: white;\\n  --mat-stepper-header-done-state-icon-background-color: #f44336;\\n  --mat-stepper-header-done-state-icon-foreground-color: white;\\n  --mat-stepper-header-edit-state-icon-background-color: #f44336;\\n  --mat-stepper-header-edit-state-icon-foreground-color: white;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-stepper-header-height: 72px;\\n}\\n\\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\\n  color: #757575;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-toolbar-container-background-color: whitesmoke;\\n  --mat-toolbar-container-text-color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  --mat-toolbar-container-background-color: #3f51b5;\\n  --mat-toolbar-container-text-color: white;\\n}\\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\\n  --mat-toolbar-container-background-color: #ff4081;\\n  --mat-toolbar-container-text-color: white;\\n}\\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\\n  --mat-toolbar-container-background-color: #f44336;\\n  --mat-toolbar-container-text-color: white;\\n}\\n\\nhtml[_ngcontent-%COMP%] {\\n  --mat-toolbar-standard-height: 64px;\\n  --mat-toolbar-mobile-height: 56px;\\n}\\n\\n.mat-tree[_ngcontent-%COMP%] {\\n  background: white;\\n}\\n\\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n\\n.mat-tree-node[_ngcontent-%COMP%] {\\n  min-height: 48px;\\n}\\n\\n\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.login[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  background-color: #f7f7f7;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.loginContainer[_ngcontent-%COMP%] {\\n  width: 800px;\\n  height: 600px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-image: linear-gradient(to right, #f7f7f7 50%, #5ba141 50%);\\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\\n  border-radius: 40px;\\n  animation: _ngcontent-%COMP%_zoomIn;\\n  animation-duration: 0.7s;\\n}\\n\\n.loginInputs[_ngcontent-%COMP%] {\\n  margin-left: 160px;\\n}\\n\\n.formLogin[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.logoIff[_ngcontent-%COMP%] {\\n  position: relative;\\n  left: 55px;\\n  width: 250px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-size: 45px;\\n  color: #fff;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.recoveryPassword[_ngcontent-%COMP%] {\\n  position: relative;\\n  left: 200px;\\n  margin: 10px 0px 30px 0px;\\n}\\n\\n.recoveryPassword[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #fff !important;\\n}\\n\\n.btnLogin[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.buttonConfirm[_ngcontent-%COMP%] {\\n  width: 150px;\\n  height: 50px;\\n  font-size: 20px;\\n  color: #5ba141 !important;\\n  border-radius: 10px;\\n}\\n\\n.inputLogin[_ngcontent-%COMP%] {\\n  width: 350px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","controller","loginObj","loginController","returnLoginEmpty","formLogin","group","user","required","password","login","email","get","value","senha","Login","subscribe","next","result","console","log","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","UnitOfControllerService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_mat_error_12_Template","LoginComponent_mat_error_17_Template","ɵɵlistener","LoginComponent_Template_button_click_22_listener","ɵɵadvance","ɵɵproperty","controls","hasError"],"sources":["/home/belizario/Documentos/GitHub/AcessIffWeb/AcessIff/AccessIffWeb/src/app/pages/login/login.component.ts","/home/belizario/Documentos/GitHub/AcessIffWeb/AcessIff/AccessIffWeb/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UnitOfControllerService } from 'src/app/controllers/UnitOfController/unit-of-controller.service';\nimport { Login } from 'src/app/interfaces/login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  formLogin!: FormGroup;\n  loginObj: Login = this.controller.loginController.returnLoginEmpty();\n\n  constructor(\n    private fb: FormBuilder,\n    private controller: UnitOfControllerService,\n  ) {\n    this.formLogin = this.fb.group({\n      user: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  login() {\n    this.loginObj.email = this.formLogin.get('user')?.value;\n    this.loginObj.senha = this.formLogin.get('password')?.value;\n\n    this.controller.loginController.Login(this.loginObj).subscribe({\n      next: (result) => {\n        console.log(result);\n      },\n      error: (error) => {\n        console.log(error);\n      }\n    })\n}\n}\n","<div class=\"login\">\n  <div class=\"loginContainer\">\n    <div class=\"imgLogin\">\n      <img src=\"../../../assets/logoIff.jpeg\" alt=\"logoIff\" class=\"logoIff\">\n    </div>\n    <div class=\"loginInputs\">\n      <p class=\"title\">Entrar</p>\n      <form [formGroup]=\"formLogin\" class=\"formLogin\">\n        <mat-form-field class=\"inputLogin\">\n          <mat-label>E-mail ou matrícula</mat-label>\n          <input matInput formControlName=\"user\">\n          <mat-error *ngIf=\"formLogin.controls['user'].hasError('required')\">E-mail inválido!</mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"inputLogin\">\n          <mat-label>Senha</mat-label>\n          <input matInput formControlName=\"password\">\n          <mat-error *ngIf=\"formLogin.controls['password'].hasError('required')\">Senha inválida!</mat-error>\n        </mat-form-field>\n      </form>\n      <div class=\"recoveryPassword\">\n        <a href=\"#\">Esqueci minha senha</a>\n      </div>\n      <div class=\"btnLogin\">\n        <button mat-raised-button class=\"buttonConfirm\" (click)=\"login()\">Entrar</button>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICUzDC,EAAA,CAAAC,cAAA,gBAAmE;IAAAD,EAAA,CAAAE,MAAA,4BAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAK/FH,EAAA,CAAAC,cAAA,gBAAuE;IAAAD,EAAA,CAAAE,MAAA,2BAAe;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADN5G,OAAM,MAAOC,cAAc;EAIzBC,YACUC,EAAe,EACfC,UAAmC;IADnC,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,UAAU,GAAVA,UAAU;IAJpB,KAAAC,QAAQ,GAAU,IAAI,CAACD,UAAU,CAACE,eAAe,CAACC,gBAAgB,EAAE;IAMlE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACe,QAAQ,CAAC;MAC/BC,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACe,QAAQ;KACnC,CAAC;EACJ;EAEAE,KAAKA,CAAA;IACH,IAAI,CAACR,QAAQ,CAACS,KAAK,GAAG,IAAI,CAACN,SAAS,CAACO,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK;IACvD,IAAI,CAACX,QAAQ,CAACY,KAAK,GAAG,IAAI,CAACT,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;IAE3D,IAAI,CAACZ,UAAU,CAACE,eAAe,CAACY,KAAK,CAAC,IAAI,CAACb,QAAQ,CAAC,CAACc,SAAS,CAAC;MAC7DC,IAAI,EAAGC,MAAM,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACrB,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;KACD,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBA1BYxB,cAAc,EAAAJ,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA/B,EAAA,CAAA6B,iBAAA,CAAAG,EAAA,CAAAC,uBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd9B,cAAc;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BzC,EAAA,CAAAC,cAAA,aAAmB;QAGbD,EAAA,CAAA2C,SAAA,aAAsE;QACxE3C,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAyB;QACND,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC3BH,EAAA,CAAAC,cAAA,cAAgD;QAEjCD,EAAA,CAAAE,MAAA,gCAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAC1CH,EAAA,CAAA2C,SAAA,gBAAuC;QACvC3C,EAAA,CAAA4C,UAAA,KAAAC,oCAAA,uBAA+F;QACjG7C,EAAA,CAAAG,YAAA,EAAiB;QACjBH,EAAA,CAAAC,cAAA,yBAAmC;QACtBD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAC5BH,EAAA,CAAA2C,SAAA,iBAA2C;QAC3C3C,EAAA,CAAA4C,UAAA,KAAAE,oCAAA,uBAAkG;QACpG9C,EAAA,CAAAG,YAAA,EAAiB;QAEnBH,EAAA,CAAAC,cAAA,eAA8B;QAChBD,EAAA,CAAAE,MAAA,2BAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAErCH,EAAA,CAAAC,cAAA,eAAsB;QAC4BD,EAAA,CAAA+C,UAAA,mBAAAC,iDAAA;UAAA,OAASN,GAAA,CAAA1B,KAAA,EAAO;QAAA,EAAC;QAAChB,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAhB7EH,EAAA,CAAAiD,SAAA,GAAuB;QAAvBjD,EAAA,CAAAkD,UAAA,cAAAR,GAAA,CAAA/B,SAAA,CAAuB;QAIbX,EAAA,CAAAiD,SAAA,GAAqD;QAArDjD,EAAA,CAAAkD,UAAA,SAAAR,GAAA,CAAA/B,SAAA,CAAAwC,QAAA,SAAAC,QAAA,aAAqD;QAKrDpD,EAAA,CAAAiD,SAAA,GAAyD;QAAzDjD,EAAA,CAAAkD,UAAA,SAAAR,GAAA,CAAA/B,SAAA,CAAAwC,QAAA,aAAAC,QAAA,aAAyD"},"metadata":{},"sourceType":"module","externalDependencies":[]}