{"ast":null,"code":"import { apiUrl } from 'src/app/utils/apiUrl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n  }\n  Login(data) {\n    return this.http.post(apiUrl + 'Usuario/login', data);\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["apiUrl","LoginService","constructor","http","Login","data","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/belizario/Documentos/GitHub/AcessIffWeb/AcessIff/AccessIffWeb/src/app/services/Login/login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Login } from 'src/app/interfaces/login';\nimport { apiUrl } from 'src/app/utils/apiUrl';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public Login(data: Login) {\n    return this.http.post(apiUrl + 'Usuario/login', data);\n  }\n}\n"],"mappings":"AAGA,SAASA,MAAM,QAAQ,sBAAsB;;;AAK7C,OAAM,MAAOC,YAAY;EAEvBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACV;EAEGC,KAAKA,CAACC,IAAW;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAACN,MAAM,GAAG,eAAe,EAAEK,IAAI,CAAC;EACvD;EAAC,QAAAE,CAAA,G;qBARUN,YAAY,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZX,YAAY;IAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}